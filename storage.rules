rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Profile avatars (5MB max, images only)
    match /avatars/{userId}/{fileName} {
      allow read: if true;
      allow write: if isOwner(userId) && 
                      request.resource.size < 5 * 1024 * 1024 &&
                      request.resource.contentType.matches('image/.*');
    }
    
    // Classroom attachments (10MB max)
    match /attachments/{classroomId}/{fileName} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && 
                      request.resource.size < 10 * 1024 * 1024;
    }
    
    // Assignment submissions (10MB max)
    match /submissions/{assignmentId}/{userId}/{fileName} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId) && 
                      request.resource.size < 10 * 1024 * 1024;
    }
    
    // Certificates (Cloud Functions only)
    match /certificates/{userId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if false;
    }
    
    // School logos (5MB max, images only)
    match /schools/{schoolId}/{fileName} {
      allow read: if true;
      allow write: if isSignedIn() && 
                      request.resource.size < 5 * 1024 * 1024 &&
                      request.resource.contentType.matches('image/.*');
    }
    
    // Report screenshots (5MB max, images only)
    match /reports/{reportId}/{fileName} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && 
                      request.resource.size < 5 * 1024 * 1024 &&
                      request.resource.contentType.matches('image/.*');
    }
    
    // Backups (Functions only)
    match /backups/{date}/{fileName} {
      allow read: if false;
      allow write: if false;
    }
  }
}
